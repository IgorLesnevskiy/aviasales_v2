{"version":3,"sources":["resources/images/logo.svg","redux/reducers/tickets.js","redux/actions/tickets.js","redux/reducers/index.js","tools/api/_abstractApi.js","tools/normalizers/ticketsNormalizer.js","tools/api/index.js","redux/middlewares/tickets.js","components/UpButton/UpButton.jsx","components/Page/Page.jsx","components/Floor/Floor.js","components/Logo/Logo.jsx","components/Checkbox/Checkbox.js","components/FilterPanel/FilterPanel.js","components/FiltersBar/FiltersBar.js","tools/utils.js","components/ChekersBar/CheckersBar.js","components/SortersBar/SortersBar.js","components/FormattedPrice/FormattedPrice.js","components/Ticket/Ticket.js","redux/containers/TicketContainer.js","components/TicketsList/TicketsList.js","redux/containers/TicketsListContainer.js","components/FilteredList/FilteredList.js","components/Application/Application.js","index.js"],"names":["module","exports","ticketsReducer","tickets","initialState","action","type","loading","entities","payload","ids","error","combineReducers","_abstractApi","baseURL","this","path","options","request","_buildUrl","method","body","data","url","axios","catch","e","Error","ticketsNormalizer","originalData","a","normalize","schema","Entity","idAttribute","value","parent","key","generateKeyForTicket","processStrategy","carrierLogoUrl","getIATALogoUrl","carrier","currency","ticket","segments","map","s","destination","date","md5","flat","join","code","_searchToken","amount","_getSearchToken","token","buildUrl","queryParams","searchId","get","then","result","slice","newToken","AbstractApi","dispatch","next","api","getTickets","console","message","DEFAULT_OPTIONS","UpButton","props","startScrollPosition","onScrollHandlerDelay","useState","isArrowVisible","setArrowVisibility","onButtonClickHandler","useCallback","targetPoint","anime","duration","easing","targets","document","documentElement","scrollTop","finished","scrollToPoint","useEffect","onScrollHandler","_throttle","shouldShowButton","scrollingElement","addEventListener","removeEventListener","className","cn","onClick","icon","Page","children","Floor","offsetTop","offsetBottom","contentAlign","extraClasses","data-offset-top","data-offset-bottom","data-content-align","Logo","imageSrc","alt","title","width","target","href","src","Checkbox","FilterPanelCheckboxesList","FilterPanel","FiltersBar","Array","fill","_","convertDate","params","formatString","originalFormatString","locale","formattedDate","moment","isValid","format","getNounEnding","n","endings","cases","number","Math","abs","getUniqueId","length","dt","Date","getTime","repeat","replace","r","random","floor","toString","id","CheckersBar","name","SortersBar","LOCALE_MAP","RUB","USD","EUR","FormattedPrice","data-type","maximumFractionDigits","Number","toLocaleString","convertToLocalPrice","Ticket","price","isMock","MockTicket","infoLinesAmount","Grid","container","spacing","alignItems","item","xs","segmentData","TripInfo","origin","stops","dateOfTheEnd","typeOfAmount","add","addToDate","formattedTimeFrom","formattedTimeTo","formattedDuration","originTypeOfDuration","utc","asMilliseconds","convertTimeDuration","ending","generateStopsLabel","height","MockTicketInfoLine","cellsAmount","MockTicketInfoCell","connect","state","ownProps","ticketId","MockTicketsList","ticketsAmount","TicketContainer","TicketsList","Function","prototype","ticketsSelector","createSelector","mapDispatch","FilteredList","Fragment","TicketsListContainer","library","fas","LOGO_PARAMS","require","Application","offsettBottom","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","ticketsMiddlewares","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.312fed0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0c089234.svg\";","import {\n    // TICKETS_GET_TICKETS,\n    TICKETS_HIDE_LOADER,\n    TICKETS_SHOW_LOADER,\n    TICKETS_FETCH_SUCCESS,\n    TICKETS_FETCH_FAILURE,\n} from \"../actions/tickets\";\n\nexport default ticketsReducer;\n\nconst initialState = {\n    entities: [],\n    ids: [],\n    loading: true,\n    error: null,\n};\n\nfunction ticketsReducer(tickets = initialState, action) {\n    if (action.type === TICKETS_SHOW_LOADER) {\n        return {\n            ...tickets,\n            loading: true,\n        };\n    }\n\n    if (action.type === TICKETS_HIDE_LOADER) {\n        return {\n            ...tickets,\n            loading: false,\n        };\n    }\n\n    if (action.type === TICKETS_FETCH_SUCCESS) {\n        return {\n            ...tickets,\n            entities: action.payload.entities,\n            ids: action.payload.ids,\n        };\n    }\n\n    if (action.type === TICKETS_FETCH_FAILURE) {\n        return {\n            ...tickets,\n            error: action.payload.error,\n        };\n    }\n\n    return tickets;\n}\n","export const TICKETS_GET_TICKETS = \"[tickets] TICKETS_GET_TICKETS\";\nexport const TICKETS_FETCH_FAILURE = \"[tickets] TICKETS_FETCH_FAILURE\";\nexport const TICKETS_FETCH_SUCCESS = \"[tickets] TICKETS_FETCH_SUCCESS\";\nexport const TICKETS_SHOW_LOADER = \"[tickets ui] TICKETS_SHOW_LOADER\";\nexport const TICKETS_HIDE_LOADER = \"[tickets ui] TICKETS_HIDE_LOADER\";\n\nexport function getTickets() {\n    return {\n        type: TICKETS_GET_TICKETS,\n        payload: {},\n    };\n}\n\nexport function ticketsFetchSuccess(params) {\n    return {\n        type: TICKETS_FETCH_SUCCESS,\n        payload: params,\n    };\n}\n\nexport function ticketsFetchFailure(params) {\n    return {\n        type: TICKETS_FETCH_FAILURE,\n        payload: params,\n    };\n}\n\nexport function ticketsShowLoader() {\n    return {\n        type: TICKETS_SHOW_LOADER,\n        payload: {},\n    };\n}\n\nexport function ticketsHideLoader() {\n    return {\n        type: TICKETS_HIDE_LOADER,\n        payload: {},\n    };\n}\n","import { combineReducers } from \"redux\";\n\nimport ticketsReducer from \"./tickets\";\n\nexport default combineReducers({\n    tickets: ticketsReducer,\n});\n","import axios from \"axios\";\n\nexport default class _abstractApi {\n    constructor({ baseURL = \"\" } = {}) {\n        this.baseURL = baseURL;\n    }\n\n    get(path, options = {}) {\n        return this.request(this._buildUrl(path), {\n            method: \"GET\",\n            ...options,\n        });\n    }\n\n    post(path, body, options = {}) {\n        return this.request(this._buildUrl(path), {\n            method: \"POST\",\n            data: {\n                ...body,\n            },\n            ...options,\n        });\n    }\n\n    request(url, options = {}) {\n        return axios({\n            url,\n            ...options,\n        }).catch((e) => {\n            throw Error(e);\n        });\n    }\n\n    _buildUrl(path) {\n        return `${this.baseURL}${path}`;\n    }\n}\n","import { normalize, schema } from \"normalizr\";\nimport md5 from \"md5\";\n\n// import userStorageController from \"../userStorageController\";\n\nexport default async function ticketsNormalizer(originalData) {\n    return normalize(originalData, [\n        new schema.Entity(\n            \"tickets\",\n            {},\n            {\n                idAttribute(value, parent, key) {\n                    return generateKeyForTicket(value);\n                },\n                processStrategy(value, parent, key) {\n                    return {\n                        ...value,\n                        carrierLogoUrl: getIATALogoUrl(value.carrier),\n                        currency: \"RUB\",\n                    };\n                },\n            }\n        ),\n    ]);\n}\n\nfunction generateKeyForTicket(ticket) {\n    const data = [\n        ticket.carrier,\n        ticket?.segments.map((s) => s.destination + s.date),\n    ];\n\n    return md5(data.flat().join(\"\"));\n}\n\nfunction getIATALogoUrl(code = \"\") {\n    return code ? `//pics.avs.io/99/36/${code}.png` : \"\";\n}\n","import buildUrl from \"build-url\";\n\nimport AbstractApi from \"./_abstractApi\";\nimport ticketsNormalizer from \"../normalizers/ticketsNormalizer\";\n\nconst API_URL = \"https://front-test.beta.aviasales.ru\";\n\nclass Api extends AbstractApi {\n    constructor() {\n        super({\n            baseURL: API_URL,\n        });\n\n        this._searchToken = null;\n    }\n\n    /**\n     * Get tickets from API\n     * @param amount - how much tickets you would like to get (0 means all)\n     * @returns\n     */\n    async getTickets(amount = 0) {\n        const token = await this._getSearchToken();\n        const url = buildUrl(null, {\n            path: \"tickets\",\n            queryParams: {\n                searchId: token,\n            },\n        });\n\n        return this.get(url).then((result) => {\n            const tickets = result?.data?.tickets || [];\n\n            return ticketsNormalizer(\n                amount ? tickets.slice(0, amount) : tickets\n            );\n        });\n    }\n\n    async _getSearchToken() {\n        if (this._searchToken) {\n            return this._searchToken;\n        }\n\n        const newToken = await this.get(\"/search\");\n        this._searchToken = newToken.data.searchId;\n\n        return this._searchToken;\n    }\n}\n\nexport default new Api();\n","import {\n    TICKETS_GET_TICKETS,\n    ticketsShowLoader,\n    ticketsHideLoader,\n    ticketsFetchSuccess,\n    ticketsFetchFailure,\n} from \"../actions/tickets\";\nimport api from \"../../tools/api\";\n\nconst getTickets = ({ dispatch }) => (next) => (action) => {\n    next(action);\n\n    if (action.type === TICKETS_GET_TICKETS) {\n        dispatch(ticketsShowLoader());\n\n        api.getTickets(5)\n            .then((data) => {\n                dispatch(\n                    ticketsFetchSuccess({\n                        entities: data.entities.tickets,\n                        ids: data.result,\n                    })\n                );\n\n                dispatch(ticketsHideLoader());\n            })\n            .catch((e) => {\n                console.error(e);\n\n                dispatch(\n                    ticketsFetchFailure({\n                        error: e.message,\n                    })\n                );\n\n                dispatch(ticketsHideLoader());\n            });\n    }\n};\n\nexport default [getTickets];\n","import React, { useEffect, useCallback, useState } from \"react\";\nimport cn from \"classnames\";\nimport anime from \"animejs/lib/anime.es.js\";\nimport _throttle from \"lodash/throttle\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./UpButton.scss\";\n\nconst DEFAULT_OPTIONS = {\n    startScrollPosition: 100, // px, с какой точки начинать показывать стрелку\n    onScrollHandlerDelay: 150, // ms, время throttle-задержки\n    arrowVisibilityClass: \"is-visible\", // класс для показа кнопки\n};\n\n// document.addEventListener('scroll', _throttle(this.onScrollHandler.bind(this), this.config.onScrollHandlerDelay));\nconst UpButton = (props) => {\n    const {\n        startScrollPosition = DEFAULT_OPTIONS.startScrollPosition,\n        onScrollHandlerDelay = DEFAULT_OPTIONS.onScrollHandlerDelay,\n    } = props;\n\n    const [isArrowVisible, setArrowVisibility] = useState(false);\n\n    const onButtonClickHandler = useCallback(() => {\n        scrollToPoint();\n    }, []);\n\n    useEffect(() => {\n        const onScrollHandler = _throttle(function (e) {\n            const shouldShowButton = getScrollTopValue() > startScrollPosition;\n\n            if (shouldShowButton && !isArrowVisible) {\n                setArrowVisibility(true);\n            } else if (!shouldShowButton && isArrowVisible) {\n                setArrowVisibility(false);\n            }\n        }, onScrollHandlerDelay);\n\n        document.addEventListener(\"scroll\", onScrollHandler);\n\n        return () => {\n            document.removeEventListener(\"scroll\", onScrollHandler);\n        };\n    }, [isArrowVisible, onScrollHandlerDelay, startScrollPosition]);\n\n    return (\n        <button\n            className={cn(\"up-button\", isArrowVisible ? \"is-visible\" : \"\")}\n            onClick={onButtonClickHandler}\n        >\n            <FontAwesomeIcon\n                icon={[\"fas\", \"arrow-up\"]}\n                className={\"up-button__icon\"}\n            />\n        </button>\n    );\n};\n\nexport default UpButton;\n\n//*****\n\nfunction scrollToPoint(targetPoint = 0) {\n    return anime({\n        duration: 500, // ms, длительной анимация прокручивания\n        easing: \"cubicBezier(0.215, 0.61, 0.355, 1)\", // типа анимации\n        targets: [document.documentElement, document.body],\n        scrollTop: targetPoint,\n    }).finished;\n}\n\nfunction getScrollTopValue() {\n    const el = document.scrollingElement || document.documentElement;\n\n    return el.scrollTop;\n}\n","import React from \"react\";\n\nimport \"./Page.scss\";\n\nconst Page = (props) => {\n    return (\n        <div className=\"page\">\n            <div className=\"page__inner\">{props.children}</div>\n        </div>\n    );\n};\n\nexport default Page;\n","import React from \"react\";\nimport cn from \"classnames\";\n\nimport \"./Floor.scss\";\n\nconst Floor = (props) => {\n    const {\n        offsetTop = \"small\",\n        offsetBottom = \"small\",\n        contentAlign = \"left\",\n        extraClasses = [],\n        children,\n    } = props;\n\n    return (\n        <div\n            className={cn(\"floor\", extraClasses)}\n            data-offset-top={offsetTop}\n            data-offset-bottom={offsetBottom}\n            data-content-align={contentAlign}\n        >\n            <div className=\"floor__inner\">{children}</div>\n        </div>\n    );\n};\n\nexport default Floor;\n","import React from \"react\";\n\nimport \"./Logo.scss\";\n\nconst Logo = (props) => {\n    const {\n        imageSrc = \"\",\n        alt = \"\",\n        title = \"\",\n        url = \"/\",\n        width,\n        target = \"_blank\",\n    } = props;\n\n    return (\n        <div className={\"logo\"}>\n            <a href={url} target={target}>\n                <img src={imageSrc} alt={alt} title={title} width={width} />\n            </a>\n        </div>\n    );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nimport \"./Checkbox.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Checkbox = () => {\n    return (\n        <label className={\"checkbox\"}>\n            <input type={\"checkbox\"} className={\"checkbox__input\"} />\n\n            <div className={\"checkbox__box\"}>\n                <FontAwesomeIcon\n                    icon={[\"fas\", \"check\"]}\n                    className={\"checkbox__box-tick\"}\n                />\n            </div>\n            <div className={\"checkbox__label\"}>Без пересадок</div>\n        </label>\n    );\n};\n\nexport default Checkbox;\n","import React from \"react\";\n\nimport \"./FilterPanel.scss\";\nimport Checkbox from \"../Checkbox\";\n\nconst FilterPanel = (props) => {\n    const { children, title } = props;\n\n    return (\n        <div className={\"filter-panel-wrapper\"}>\n            <div className={\"filter-panel-wrapper__title\"}>{title}</div>\n            <div className={\"filter-panel-wrapper__content\"}>{children}</div>\n        </div>\n    );\n};\n\nconst FilterPanelCheckboxesList = (props) => {\n    return (\n        <div className={\"filter-panel-checkboxes-list\"}>\n            <div className={\"filter-panel-checkboxes-list__row\"}>\n                <Checkbox />\n            </div>\n            <div className={\"filter-panel-checkboxes-list__row\"}>\n                <Checkbox />\n            </div>\n            <div className={\"filter-panel-checkboxes-list__row\"}>\n                <Checkbox />\n            </div>\n        </div>\n    );\n};\n\nexport default FilterPanel;\n\nexport { FilterPanelCheckboxesList };\n","import React from \"react\";\n\nimport \"./FiltersBar.scss\";\nimport FilterPanel, { FilterPanelCheckboxesList } from \"../FilterPanel\";\n\nconst FiltersBar = () => {\n    return (\n        <div className={\"filters-bar\"}>\n            {Array(3)\n                .fill()\n                .map((_, key) => {\n                    return (\n                        <div className={\"filters-bar__item\"} key={key}>\n                            <FilterPanel title={\"Количество пересадок\"}>\n                                <FilterPanelCheckboxesList />\n                            </FilterPanel>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default FiltersBar;\n","import moment from \"moment\";\nimport \"moment/locale/ru\";\n\n/**\n * Конвертор даты\n * @param {Object} params - объект параметров\n * @param {String} params.date - дата для конвертации\n * @param {String} params.formatString - формат для конвертации\n * @param {String} params.originalFormatString - оригинальный формат, в котором пердставлена дата\n * @param {String} params.locale - локаль\n *\n * @example\n *      convertDate({\n *\t\t\tdate: '12.05.18',\n *\t\t\tformatString: 'DD MMM YYYY, dd',\n *\t\t\tlocale: 'ru'\n *\t\t}); // 12 мая 2018, сб\n *\n * @returns {string}\n */\nfunction convertDate(params) {\n    const {\n        date,\n        formatString = \"YYYY-MM-DDHH:mmZ\",\n        originalFormatString = \"YYY-MM-DDHH:mmZ\",\n        locale = \"ru\",\n    } = params;\n\n    const formattedDate = moment(date, originalFormatString, locale).locale(\n        locale\n    );\n\n    return formattedDate.isValid() ? formattedDate.format(formatString) : \"\";\n}\n\n/**\n * Добавить к дате произвольный промежуток времени. Возвращает дату в изначальном формате\n * @param {Object} params - объект параметров\n * @param {String} params.date - дата для сложения\n * @param {String} params.amount - количество, которое нужно прибавить\n * @param {String} params.typeOfAmount - тип времени, которое нужно прибавить (https://momentjs.com/docs/#/manipulating/add/)\n * @param {String} params.originalFormatString - оригинальный формат, в котором пердставлена дата\n *\n * @example\n *      addToDate({\n *          date: \"2020-05-15\",\n *          originalFormatString: \"YYY-MM-DD\",\n *          amount: \"5\",\n *          typeOfAmount: \"d\",\n *\t\t}); // 2020-05-20\n *\n * @returns {string}\n */\nfunction addToDate(params) {\n    const {\n        date,\n        originalFormatString = \"YYY-MM-DDHH:mmZ\",\n        amount = 0,\n        typeOfAmount = \"ms\",\n    } = params;\n\n    const formattedDate = moment(date, originalFormatString).add(\n        amount,\n        typeOfAmount\n    );\n\n    return formattedDate.isValid()\n        ? formattedDate.format(originalFormatString)\n        : \"\";\n}\n\n/**\n * Конвертирует промежуток времени в новый формат\n * @param params\n * @param params.duration - промежуток времени\n * @param params.originTypeOfDuration - типа данных промежутка времени (https://momentjs.com/docs/#/manipulating/add/),\n * @param params.formatString - формат для конвертации\n * @param params.locale - локаль\n *\n * @example\n *      convertTimeDuration({\n *          duration: \"500\",\n *          originTypeOfDuration: \"m\",\n *          formatString: \"HHч mmм\",\n *      }) // 8ч 20м\n *\n * @returns {string}\n */\nfunction convertTimeDuration(params) {\n    const {\n        duration,\n        originTypeOfDuration = \"ms\",\n        formatString = \"YYY-MM-DDHH:mmZ\",\n        locale = \"ru\",\n    } = params;\n\n    const formattedDuration = moment\n        .utc(moment.duration(duration, originTypeOfDuration).asMilliseconds())\n        .locale(locale);\n\n    return formattedDuration.isValid()\n        ? formattedDuration.format(formatString)\n        : \"\";\n}\n\n/**\n * Возвращает склонение слова относительно числа\n * @param {Number} n - число\n * @param {Array} endings - массив склонений\n *\n * @example\n *      getNounEnding(3, ['арбуз', 'арбуза', 'арбузов']); // 3 арбуза\n *\n * @returns {String}\n */\nfunction getNounEnding(n, endings = []) {\n    const cases = [2, 0, 1, 1, 1, 2];\n    const number = Math.abs(n);\n\n    return endings[\n        number % 100 > 4 && number % 100 < 20\n            ? 2\n            : cases[number % 10 < 5 ? number % 10 : 5]\n    ];\n}\n\n/**\n * Конвертация цены для локали\n * @param amount\n * @param locale\n * @param maximumFractionDigits\n *\n * @example\n *    convertToLocalPrice(1200.45); // 12 000,45\n *\n * @returns {any}\n */\nfunction convertToLocalPrice(\n    amount = 0,\n    locale = \"RU\",\n    maximumFractionDigits = 0\n) {\n    const n = Number(amount);\n\n    return typeof n === \"number\"\n        ? n.toLocaleString(locale, {\n              maximumFractionDigits,\n          })\n        : 0;\n}\n\n/**\n * Генерация уникального ID\n * @param length\n * @returns {string}\n */\nfunction getUniqueId(length = 10) {\n    let dt = new Date().getTime();\n\n    return \"x\".repeat(length).replace(/[x]/g, function () {\n        const r = (dt + Math.random() * 16) % 16 | 0;\n        dt = Math.floor(dt / 16);\n        return r.toString(16);\n    });\n}\n\nexport {\n    convertToLocalPrice,\n    convertDate,\n    convertTimeDuration,\n    addToDate,\n    getUniqueId,\n    getNounEnding,\n};\n","import React from \"react\";\n\nimport \"./CheckersBar.scss\";\nimport { getUniqueId } from \"../../tools/utils\";\n\nconst id = getUniqueId();\n\nconst CheckersBar = () => {\n    return (\n        <div className={\"checkers-bar\"}>\n            <div className={\"checkers-bar__item\"}>\n                <label className={\"checkers-bar-item\"}>\n                    <input\n                        type={\"radio\"}\n                        className={\"checkers-bar-item__input\"}\n                        name={\"checkers-bar-\" + id}\n                    />\n                    <div className={\"checkers-bar-item__content\"}>\n                        Самый быстрый\n                    </div>\n                </label>\n            </div>\n            <div className={\"checkers-bar__item\"}>\n                <label className={\"checkers-bar-item\"}>\n                    <input\n                        type={\"radio\"}\n                        className={\"checkers-bar-item__input\"}\n                        name={\"checkers-bar-\" + id}\n                    />\n                    <div className={\"checkers-bar-item__content\"}>\n                        Самый дешевый\n                    </div>\n                </label>\n            </div>\n        </div>\n    );\n};\n\nexport default CheckersBar;\n","import React from \"react\";\n\nimport \"./SortersBar.scss\";\n\nimport CheckersBar from \"../ChekersBar\";\n\nconst SortersBar = () => {\n    return (\n        <div className={\"sorters-bar\"}>\n            <div className={\"sorters-bar__item\"}>\n                <CheckersBar />\n            </div>\n        </div>\n    );\n};\n\nexport default SortersBar;\n","import React from \"react\";\n\nimport \"./FormattedPrice.scss\";\nimport { convertToLocalPrice } from \"../../tools/utils\";\n\nconst LOCALE_MAP = {\n    RUB: \"ru\",\n    USD: \"us\",\n    EUR: \"eu\",\n};\n\nconst FormattedPrice = (props) => {\n    const { currency = \"RUB\", amount = 0 } = props;\n\n    return (\n        <div className={\"formatted-price\"} data-type={currency}>\n            {convertToLocalPrice(amount, LOCALE_MAP[currency])}\n        </div>\n    );\n};\n\nexport default FormattedPrice;\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { Grid } from \"@material-ui/core\";\n\nimport {\n    convertDate,\n    addToDate,\n    convertTimeDuration,\n    getNounEnding,\n    getUniqueId,\n} from \"../../tools/utils\";\n\nimport \"./Ticket.scss\";\nimport FormattedPrice from \"../FormattedPrice\";\n\nconst Ticket = (props) => {\n    const {\n        id,\n        carrier,\n        carrierLogoUrl,\n        currency,\n        price,\n        segments = [],\n        isMock = false,\n    } = props;\n\n    if (isMock) {\n        return <MockTicket infoLinesAmount={2} />;\n    }\n\n    return (\n        <div className={\"ticket\"}>\n            <div className={\"ticket__inner\"}>\n                <div className={\"ticket__head\"}>\n                    <Grid container spacing={3} alignItems=\"center\">\n                        <Grid item xs={8}>\n                            <div className={\"ticket__price\"}>\n                                <FormattedPrice\n                                    amount={price}\n                                    currency={currency}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            {carrierLogoUrl && (\n                                <div className={\"ticket__carrier-logo\"}>\n                                    <img\n                                        src={carrierLogoUrl}\n                                        alt={carrier}\n                                        title={carrier}\n                                    />\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className={\"ticket__body\"}>\n                    {segments.map((segmentData, key) => {\n                        return (\n                            <div\n                                className={\"ticket__info-line\"}\n                                key={`${id}-${key}`}\n                            >\n                                <TripInfo {...segmentData} />\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Ticket;\n\nfunction TripInfo(props) {\n    const { date = null, destination, origin, duration, stops = [] } = props;\n\n    const dateOfTheEnd = addToDate({\n        date,\n        amount: duration,\n        typeOfAmount: \"m\",\n    });\n\n    const formattedTimeFrom = convertDate({\n        date,\n        formatString: \"HH:mm\",\n    });\n\n    const formattedTimeTo = convertDate({\n        date: dateOfTheEnd,\n        formatString: \"HH:mm\",\n    });\n\n    const formattedDuration = convertTimeDuration({\n        duration,\n        originTypeOfDuration: \"m\",\n        formatString: \"HHч mmм\",\n    });\n\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={4}>\n                <div className={\"ticket-info-cell\"}>\n                    <div className={\"ticket-info-cell__title\"}>\n                        {origin} – {destination}\n                    </div>\n                    <div className={\"ticket-info-cell__value\"}>\n                        {formattedTimeFrom} – {formattedTimeTo}\n                    </div>\n                </div>\n            </Grid>\n\n            <Grid item xs={4}>\n                <div className={\"ticket-info-cell\"}>\n                    <div className={\"ticket-info-cell__title\"}>В пути</div>\n                    <div className={\"ticket-info-cell__value\"}>\n                        {formattedDuration}\n                    </div>\n                </div>\n            </Grid>\n\n            <Grid item xs={4}>\n                <div className={\"ticket-info-cell\"}>\n                    <div className={\"ticket-info-cell__title\"}>\n                        {generateStopsLabel(stops)}\n                    </div>\n                    <div className={\"ticket-info-cell__value\"}>\n                        {stops.join(\", \") || \"-\"}\n                    </div>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nfunction MockTicket(props) {\n    const { infoLinesAmount = 2 } = props;\n\n    return (\n        <div className={\"ticket\"}>\n            <div className={\"ticket__inner\"}>\n                <div className={\"ticket__head\"}>\n                    <Grid container spacing={3} alignItems=\"center\">\n                        <Grid item xs={8}>\n                            <div className={\"ticket__price\"}>\n                                <Skeleton />\n                            </div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <div className={\"ticket__carrier-logo\"}>\n                                <Skeleton height={\"100%\"} />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className={\"ticket__body\"}>\n                    {Array(infoLinesAmount)\n                        .fill()\n                        .map(() => {\n                            return (\n                                <div\n                                    className={\"ticket__info-line\"}\n                                    key={`mock-ticket-info-line-${getUniqueId()}`}\n                                >\n                                    <MockTicketInfoLine cellsAmount={3} />\n                                </div>\n                            );\n                        })}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction MockTicketInfoLine(props) {\n    const { cellsAmount = 3 } = props;\n    return (\n        <Grid container spacing={3}>\n            {Array(cellsAmount)\n                .fill()\n                .map(() => {\n                    return (\n                        <Grid\n                            item\n                            xs={4}\n                            key={`mock-ticket-info-line-${getUniqueId()}`}\n                        >\n                            <MockTicketInfoCell />\n                        </Grid>\n                    );\n                })}\n        </Grid>\n    );\n}\n\nfunction MockTicketInfoCell(props) {\n    return (\n        <div className={\"ticket-info-cell\"}>\n            <div className={\"ticket-info-cell__title\"}>\n                <Skeleton />\n            </div>\n            <div className={\"ticket-info-cell__value\"}>\n                <Skeleton />\n            </div>\n        </div>\n    );\n}\n\nfunction generateStopsLabel(stops = []) {\n    if (!stops.length) {\n        return \"Без пересадок\";\n    }\n\n    const ending = getNounEnding(stops.length, [\n        \"пересадка\",\n        \"пересадки\",\n        \"пересадок\",\n    ]);\n\n    return `${stops.length} ${ending}`;\n}\n","import { connect } from \"react-redux\";\n\nimport Ticket from \"../../components/Ticket\";\n\nconst mapState = (state, ownProps) => {\n    const ticketId = ownProps.id;\n\n    return {\n        ...state.tickets.entities[ticketId],\n    };\n};\n\nexport default connect(mapState, null)(Ticket);\n","import React, { useEffect } from \"react\";\n\nimport \"./TicketsList.scss\";\nimport TicketContainer from \"../../redux/containers/TicketContainer\";\n\nconst TicketsList = (props) => {\n    const {\n        getTickets = Function.prototype,\n        tickets = [],\n        loading = false,\n        error = false,\n    } = props;\n\n    useEffect(() => {\n        getTickets();\n    }, [getTickets]);\n\n    if (loading) {\n        return <MockTicketsList ticketsAmount={3} />;\n    }\n\n    if (error) {\n        return <p>Сервер временно недоступен. Попробуйте позже.</p>;\n    }\n\n    return (\n        <div className={\"tickets-list\"}>\n            {tickets.map((ticketId) => {\n                return (\n                    <div className={\"tickets-list__item\"} key={ticketId}>\n                        <TicketContainer id={ticketId} />\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nfunction MockTicketsList(props) {\n    const { ticketsAmount = 3 } = props;\n\n    return (\n        <div className={\"tickets-list\"}>\n            {Array(ticketsAmount)\n                .fill()\n                .map((_, key) => {\n                    return (\n                        <div className={\"tickets-list__item\"} key={key}>\n                            <TicketContainer isMock={true} />\n                        </div>\n                    );\n                })}\n        </div>\n    );\n}\n\nexport default TicketsList;\n","import { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport { getTickets } from \"../actions/tickets\";\n\nimport TicketsList from \"../../components/TicketsList\";\n\nconst getTicketsQuery = (state) => state.tickets;\n\nconst ticketsSelector = createSelector([getTicketsQuery], (tickets) => {\n    return tickets.ids;\n});\n\nconst mapState = (state, ownProps) => {\n    return {\n        tickets: ticketsSelector(state),\n        loading: state.tickets.loading,\n        error: state.tickets.error,\n    };\n};\n\nconst mapDispatch = {\n    getTickets,\n};\n\nexport default connect(mapState, mapDispatch)(TicketsList);\n","import React from \"react\";\n\nimport FiltersBar from \"../FiltersBar\";\n\nimport \"./FilteredList.scss\";\nimport SortersBar from \"../SortersBar\";\n\nimport TicketsListContainer from \"../../redux/containers/TicketsListContainer\";\n\nconst FilteredList = () => {\n    return (\n        <React.Fragment>\n            <div className={\"filtered-list\"}>\n                <div className={\"filtered-list__filters\"}>\n                    <FiltersBar />\n                </div>\n                <div className={\"filtered-list__content\"}>\n                    <div className={\"filtered-list__sorters\"}>\n                        <SortersBar />\n                    </div>\n                    <div className={\"filtered-list__items\"}>\n                        <TicketsListContainer />\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default FilteredList;\n","import React from \"react\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\n\nimport UpButton from \"../UpButton\";\n\nimport \"./Application.scss\";\nimport Page from \"../Page\";\nimport Floor from \"../Floor\";\nimport Logo from \"../Logo\";\nimport FilteredList from \"../FilteredList\";\n\nlibrary.add(fas);\n\nconst LOGO_PARAMS = {\n    imageSrc: require(\"../../resources/images/logo.svg\"),\n    alt: \"\",\n    title: \"\",\n    url: \"\",\n};\n\nfunction Application() {\n    return (\n        <React.Fragment>\n            <Page>\n                <Floor\n                    offsetTop={\"large\"}\n                    offsetBottom={\"large\"}\n                    contentAlign={\"center\"}\n                >\n                    <Logo {...LOGO_PARAMS} />\n                </Floor>\n\n                <Floor offsetTop={\"none\"} offsettBottom={\"none\"}>\n                    <FilteredList />\n                </Floor>\n            </Page>\n\n            <UpButton />\n        </React.Fragment>\n    );\n}\n\nexport default Application;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport rootReducer from \"./redux/reducers\";\n\nimport ticketsMiddlewares from \"./redux/middlewares/tickets\";\nimport devMiddlewares from \"./redux/middlewares/dev\";\n\nimport Application from \"./components/Application\";\n\nimport \"./index.scss\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet middlewares = [...ticketsMiddlewares];\n\nif (process.env.NODE_ENV !== \"production\") {\n    middlewares = [...middlewares, ...devMiddlewares];\n}\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middlewares))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Application />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}